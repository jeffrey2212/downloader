// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.2
// source: model_downloader/model_downloader.proto

package model_downloader

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum definitions for model types and modes
type ModelType int32

const (
	ModelType_CHECKPOINT         ModelType = 0
	ModelType_TEXTUAL_INVERSION  ModelType = 1
	ModelType_HYPERNETWORK       ModelType = 2
	ModelType_AESTHETIC_GRADIENT ModelType = 3
	ModelType_LORA               ModelType = 4
	ModelType_CONTROLNET         ModelType = 5
	ModelType_POSES              ModelType = 6
)

// Enum value maps for ModelType.
var (
	ModelType_name = map[int32]string{
		0: "CHECKPOINT",
		1: "TEXTUAL_INVERSION",
		2: "HYPERNETWORK",
		3: "AESTHETIC_GRADIENT",
		4: "LORA",
		5: "CONTROLNET",
		6: "POSES",
	}
	ModelType_value = map[string]int32{
		"CHECKPOINT":         0,
		"TEXTUAL_INVERSION":  1,
		"HYPERNETWORK":       2,
		"AESTHETIC_GRADIENT": 3,
		"LORA":               4,
		"CONTROLNET":         5,
		"POSES":              6,
	}
)

func (x ModelType) Enum() *ModelType {
	p := new(ModelType)
	*p = x
	return p
}

func (x ModelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_downloader_model_downloader_proto_enumTypes[0].Descriptor()
}

func (ModelType) Type() protoreflect.EnumType {
	return &file_model_downloader_model_downloader_proto_enumTypes[0]
}

func (x ModelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelType.Descriptor instead.
func (ModelType) EnumDescriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{0}
}

type ModelMode int32

const (
	ModelMode_ARCHIVED   ModelMode = 0
	ModelMode_TAKEN_DOWN ModelMode = 1
)

// Enum value maps for ModelMode.
var (
	ModelMode_name = map[int32]string{
		0: "ARCHIVED",
		1: "TAKEN_DOWN",
	}
	ModelMode_value = map[string]int32{
		"ARCHIVED":   0,
		"TAKEN_DOWN": 1,
	}
)

func (x ModelMode) Enum() *ModelMode {
	p := new(ModelMode)
	*p = x
	return p
}

func (x ModelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_model_downloader_model_downloader_proto_enumTypes[1].Descriptor()
}

func (ModelMode) Type() protoreflect.EnumType {
	return &file_model_downloader_model_downloader_proto_enumTypes[1]
}

func (x ModelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelMode.Descriptor instead.
func (ModelMode) EnumDescriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{1}
}

type FpType int32

const (
	FpType_FP16 FpType = 0
	FpType_FP32 FpType = 1
)

// Enum value maps for FpType.
var (
	FpType_name = map[int32]string{
		0: "FP16",
		1: "FP32",
	}
	FpType_value = map[string]int32{
		"FP16": 0,
		"FP32": 1,
	}
)

func (x FpType) Enum() *FpType {
	p := new(FpType)
	*p = x
	return p
}

func (x FpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FpType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_downloader_model_downloader_proto_enumTypes[2].Descriptor()
}

func (FpType) Type() protoreflect.EnumType {
	return &file_model_downloader_model_downloader_proto_enumTypes[2]
}

func (x FpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FpType.Descriptor instead.
func (FpType) EnumDescriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{2}
}

type ModelSize int32

const (
	ModelSize_FULL   ModelSize = 0
	ModelSize_PRUNED ModelSize = 1
)

// Enum value maps for ModelSize.
var (
	ModelSize_name = map[int32]string{
		0: "FULL",
		1: "PRUNED",
	}
	ModelSize_value = map[string]int32{
		"FULL":   0,
		"PRUNED": 1,
	}
)

func (x ModelSize) Enum() *ModelSize {
	p := new(ModelSize)
	*p = x
	return p
}

func (x ModelSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelSize) Descriptor() protoreflect.EnumDescriptor {
	return file_model_downloader_model_downloader_proto_enumTypes[3].Descriptor()
}

func (ModelSize) Type() protoreflect.EnumType {
	return &file_model_downloader_model_downloader_proto_enumTypes[3]
}

func (x ModelSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelSize.Descriptor instead.
func (ModelSize) EnumDescriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{3}
}

type ModelFormat int32

const (
	ModelFormat_SAFE_TENSOR   ModelFormat = 0
	ModelFormat_PICKLE_TENSOR ModelFormat = 1
	ModelFormat_OTHER         ModelFormat = 2
)

// Enum value maps for ModelFormat.
var (
	ModelFormat_name = map[int32]string{
		0: "SAFE_TENSOR",
		1: "PICKLE_TENSOR",
		2: "OTHER",
	}
	ModelFormat_value = map[string]int32{
		"SAFE_TENSOR":   0,
		"PICKLE_TENSOR": 1,
		"OTHER":         2,
	}
)

func (x ModelFormat) Enum() *ModelFormat {
	p := new(ModelFormat)
	*p = x
	return p
}

func (x ModelFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_model_downloader_model_downloader_proto_enumTypes[4].Descriptor()
}

func (ModelFormat) Type() protoreflect.EnumType {
	return &file_model_downloader_model_downloader_proto_enumTypes[4]
}

func (x ModelFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelFormat.Descriptor instead.
func (ModelFormat) EnumDescriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{4}
}

// Message definitions for nested objects
type ModelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type ModelType `protobuf:"varint,2,opt,name=type,proto3,enum=modeldownloader.ModelType" json:"type,omitempty"`
	Nsfw bool      `protobuf:"varint,3,opt,name=nsfw,proto3" json:"nsfw,omitempty"`
	Poi  bool      `protobuf:"varint,4,opt,name=poi,proto3" json:"poi,omitempty"`
	Mode ModelMode `protobuf:"varint,5,opt,name=mode,proto3,enum=modeldownloader.ModelMode" json:"mode,omitempty"`
}

func (x *ModelInfo) Reset() {
	*x = ModelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelInfo) ProtoMessage() {}

func (x *ModelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelInfo.ProtoReflect.Descriptor instead.
func (*ModelInfo) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{0}
}

func (x *ModelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelInfo) GetType() ModelType {
	if x != nil {
		return x.Type
	}
	return ModelType_CHECKPOINT
}

func (x *ModelInfo) GetNsfw() bool {
	if x != nil {
		return x.Nsfw
	}
	return false
}

func (x *ModelInfo) GetPoi() bool {
	if x != nil {
		return x.Poi
	}
	return false
}

func (x *ModelInfo) GetMode() ModelMode {
	if x != nil {
		return x.Mode
	}
	return ModelMode_ARCHIVED
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeKb           int32                  `protobuf:"varint,1,opt,name=sizeKb,proto3" json:"sizeKb,omitempty"`
	PickleScanResult string                 `protobuf:"bytes,2,opt,name=pickleScanResult,proto3" json:"pickleScanResult,omitempty"`
	VirusScanResult  string                 `protobuf:"bytes,3,opt,name=virusScanResult,proto3" json:"virusScanResult,omitempty"`
	ScannedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scannedAt,proto3" json:"scannedAt,omitempty"`
	Fp               FpType                 `protobuf:"varint,5,opt,name=fp,proto3,enum=modeldownloader.FpType" json:"fp,omitempty"`
	Size             ModelSize              `protobuf:"varint,6,opt,name=size,proto3,enum=modeldownloader.ModelSize" json:"size,omitempty"`
	Format           ModelFormat            `protobuf:"varint,7,opt,name=format,proto3,enum=modeldownloader.ModelFormat" json:"format,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetSizeKb() int32 {
	if x != nil {
		return x.SizeKb
	}
	return 0
}

func (x *FileInfo) GetPickleScanResult() string {
	if x != nil {
		return x.PickleScanResult
	}
	return ""
}

func (x *FileInfo) GetVirusScanResult() string {
	if x != nil {
		return x.VirusScanResult
	}
	return ""
}

func (x *FileInfo) GetScannedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScannedAt
	}
	return nil
}

func (x *FileInfo) GetFp() FpType {
	if x != nil {
		return x.Fp
	}
	return FpType_FP16
}

func (x *FileInfo) GetSize() ModelSize {
	if x != nil {
		return x.Size
	}
	return ModelSize_FULL
}

func (x *FileInfo) GetFormat() ModelFormat {
	if x != nil {
		return x.Format
	}
	return ModelFormat_SAFE_TENSOR
}

type StatsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadCount int32   `protobuf:"varint,1,opt,name=downloadCount,proto3" json:"downloadCount,omitempty"`
	RatingCount   int32   `protobuf:"varint,2,opt,name=ratingCount,proto3" json:"ratingCount,omitempty"`
	Rating        float64 `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *StatsInfo) Reset() {
	*x = StatsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsInfo) ProtoMessage() {}

func (x *StatsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsInfo.ProtoReflect.Descriptor instead.
func (*StatsInfo) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{2}
}

func (x *StatsInfo) GetDownloadCount() int32 {
	if x != nil {
		return x.DownloadCount
	}
	return 0
}

func (x *StatsInfo) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *StatsInfo) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Nsfw   string `protobuf:"bytes,2,opt,name=nsfw,proto3" json:"nsfw,omitempty"`
	Width  int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Hash   string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	// Assuming meta is a simple string or JSON string for simplicity
	Meta string `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{3}
}

func (x *ImageInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImageInfo) GetNsfw() string {
	if x != nil {
		return x.Nsfw
	}
	return ""
}

func (x *ImageInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ImageInfo) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

// The service method's response message
type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Model        *ModelInfo             `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	ModelId      int32                  `protobuf:"varint,5,opt,name=modelId,proto3" json:"modelId,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	DownloadUrl  string                 `protobuf:"bytes,7,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"`
	TrainedWords []string               `protobuf:"bytes,8,rep,name=trainedWords,proto3" json:"trainedWords,omitempty"`
	Files        []*FileInfo            `protobuf:"bytes,9,rep,name=files,proto3" json:"files,omitempty"`
	Stats        *StatsInfo             `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`
	Images       []*ImageInfo           `protobuf:"bytes,11,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DownloadResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DownloadResponse) GetModel() *ModelInfo {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *DownloadResponse) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *DownloadResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DownloadResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *DownloadResponse) GetTrainedWords() []string {
	if x != nil {
		return x.TrainedWords
	}
	return nil
}

func (x *DownloadResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DownloadResponse) GetStats() *StatsInfo {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *DownloadResponse) GetImages() []*ImageInfo {
	if x != nil {
		return x.Images
	}
	return nil
}

// The service method's request message
type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelVersionId string `protobuf:"bytes,1,opt,name=modelVersionId,proto3" json:"modelVersionId,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_downloader_model_downloader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_downloader_model_downloader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_model_downloader_model_downloader_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadRequest) GetModelVersionId() string {
	if x != nil {
		return x.ModelVersionId
	}
	return ""
}

var File_model_downloader_model_downloader_proto protoreflect.FileDescriptor

var file_model_downloader_model_downloader_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x09,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x73, 0x66,
	0x77, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x70, 0x6f, 0x69, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x4b, 0x62, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x6b,
	0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x75, 0x73, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x69, 0x72, 0x75, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x66, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x66,
	0x70, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x6b, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x73, 0x66, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x73, 0x66, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xbb,
	0x03, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x2a, 0x81, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x45, 0x58, 0x54, 0x55, 0x41, 0x4c,
	0x5f, 0x49, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x48, 0x59, 0x50, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x45, 0x53, 0x54, 0x48, 0x45, 0x54, 0x49, 0x43, 0x5f, 0x47, 0x52, 0x41, 0x44,
	0x49, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x52, 0x41, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4e, 0x45, 0x54, 0x10, 0x05,
	0x12, 0x09, 0x0a, 0x05, 0x50, 0x4f, 0x53, 0x45, 0x53, 0x10, 0x06, 0x2a, 0x29, 0x0a, 0x09, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48,
	0x49, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x41, 0x4b, 0x45, 0x4e, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x2a, 0x1c, 0x0a, 0x06, 0x46, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x50, 0x31, 0x36, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x50,
	0x33, 0x32, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x52, 0x55, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x41, 0x46, 0x45, 0x5f, 0x54,
	0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x49, 0x43, 0x4b, 0x4c,
	0x45, 0x5f, 0x54, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x10, 0x02, 0x32, 0x69, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x65, 0x66, 0x66, 0x72, 0x65, 0x79, 0x32, 0x32, 0x31, 0x32, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_downloader_model_downloader_proto_rawDescOnce sync.Once
	file_model_downloader_model_downloader_proto_rawDescData = file_model_downloader_model_downloader_proto_rawDesc
)

func file_model_downloader_model_downloader_proto_rawDescGZIP() []byte {
	file_model_downloader_model_downloader_proto_rawDescOnce.Do(func() {
		file_model_downloader_model_downloader_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_downloader_model_downloader_proto_rawDescData)
	})
	return file_model_downloader_model_downloader_proto_rawDescData
}

var file_model_downloader_model_downloader_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_model_downloader_model_downloader_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_model_downloader_model_downloader_proto_goTypes = []interface{}{
	(ModelType)(0),                // 0: modeldownloader.ModelType
	(ModelMode)(0),                // 1: modeldownloader.ModelMode
	(FpType)(0),                   // 2: modeldownloader.FpType
	(ModelSize)(0),                // 3: modeldownloader.ModelSize
	(ModelFormat)(0),              // 4: modeldownloader.ModelFormat
	(*ModelInfo)(nil),             // 5: modeldownloader.ModelInfo
	(*FileInfo)(nil),              // 6: modeldownloader.FileInfo
	(*StatsInfo)(nil),             // 7: modeldownloader.StatsInfo
	(*ImageInfo)(nil),             // 8: modeldownloader.ImageInfo
	(*DownloadResponse)(nil),      // 9: modeldownloader.DownloadResponse
	(*DownloadRequest)(nil),       // 10: modeldownloader.DownloadRequest
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_model_downloader_model_downloader_proto_depIdxs = []int32{
	0,  // 0: modeldownloader.ModelInfo.type:type_name -> modeldownloader.ModelType
	1,  // 1: modeldownloader.ModelInfo.mode:type_name -> modeldownloader.ModelMode
	11, // 2: modeldownloader.FileInfo.scannedAt:type_name -> google.protobuf.Timestamp
	2,  // 3: modeldownloader.FileInfo.fp:type_name -> modeldownloader.FpType
	3,  // 4: modeldownloader.FileInfo.size:type_name -> modeldownloader.ModelSize
	4,  // 5: modeldownloader.FileInfo.format:type_name -> modeldownloader.ModelFormat
	5,  // 6: modeldownloader.DownloadResponse.model:type_name -> modeldownloader.ModelInfo
	11, // 7: modeldownloader.DownloadResponse.createdAt:type_name -> google.protobuf.Timestamp
	6,  // 8: modeldownloader.DownloadResponse.files:type_name -> modeldownloader.FileInfo
	7,  // 9: modeldownloader.DownloadResponse.stats:type_name -> modeldownloader.StatsInfo
	8,  // 10: modeldownloader.DownloadResponse.images:type_name -> modeldownloader.ImageInfo
	10, // 11: modeldownloader.ModelDownloader.DownloadModel:input_type -> modeldownloader.DownloadRequest
	9,  // 12: modeldownloader.ModelDownloader.DownloadModel:output_type -> modeldownloader.DownloadResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_model_downloader_model_downloader_proto_init() }
func file_model_downloader_model_downloader_proto_init() {
	if File_model_downloader_model_downloader_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_downloader_model_downloader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_downloader_model_downloader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_downloader_model_downloader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_downloader_model_downloader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_downloader_model_downloader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_downloader_model_downloader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_downloader_model_downloader_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_model_downloader_model_downloader_proto_goTypes,
		DependencyIndexes: file_model_downloader_model_downloader_proto_depIdxs,
		EnumInfos:         file_model_downloader_model_downloader_proto_enumTypes,
		MessageInfos:      file_model_downloader_model_downloader_proto_msgTypes,
	}.Build()
	File_model_downloader_model_downloader_proto = out.File
	file_model_downloader_model_downloader_proto_rawDesc = nil
	file_model_downloader_model_downloader_proto_goTypes = nil
	file_model_downloader_model_downloader_proto_depIdxs = nil
}
